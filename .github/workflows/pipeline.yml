name: Test & Publish

on: [push]

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: |
        python -m pip install --upgrade pip
        pip install -r test-requirements.txt
        pip install -r requirements.txt
        pip install .
    - name: Test with pytest
      run: |
        pytest --cov-report term-missing --cov=restfly tests
    
  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - run: |
        python -m pip install --upgrade pip
        pip install -r test-requirements.txt
        pip install -r requirements.txt
        pip install .
    - name: Linting with Flake8
      run: |
        flake8 restfly                \
               --count                \
               --select=E9,F63,F7,F82 \
               --show-source          \
               --statistics
        flake8 restfly                \
               --count                \
               --exit-zero            \
               --max-complexity=10    \
               --max-line-length=79   \
               --statistics
    
  deploy:
    runs-on: ubuntu-latest
    needs: [unit_tests, linting]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Build Package
      run: |
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
